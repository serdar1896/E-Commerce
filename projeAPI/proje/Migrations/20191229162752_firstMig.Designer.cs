// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proje.Data;

namespace proje.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191229162752_firstMig")]
    partial class firstMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("proje.Data.DatabaseContext+AltKategori", b =>
                {
                    b.Property<int>("AltKategoriId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltKategoriAd");

                    b.Property<DateTime>("AltKategoriTarih");

                    b.Property<int>("KategoriId");

                    b.HasKey("AltKategoriId");

                    b.HasIndex("KategoriId");

                    b.ToTable("altKategori");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Il", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad");

                    b.Property<int>("Ulkeid");

                    b.HasKey("Id");

                    b.HasIndex("Ulkeid");

                    b.ToTable("il");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Ilce", b =>
                {
                    b.Property<int>("IlceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad");

                    b.Property<int>("Ilid");

                    b.HasKey("IlceId");

                    b.HasIndex("Ilid");

                    b.ToTable("ilce");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Kargo", b =>
                {
                    b.Property<int>("KargoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdresId");

                    b.Property<string>("SirketAdi");

                    b.Property<string>("Telefon");

                    b.HasKey("KargoId");

                    b.HasIndex("AdresId");

                    b.ToTable("kargo");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Kategoriler", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KategoriAd");

                    b.Property<DateTime>("KategoriTarih");

                    b.HasKey("KategoriId");

                    b.ToTable("kategoriler");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Marka", b =>
                {
                    b.Property<int>("MarkaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama");

                    b.Property<string>("MarkaAdi");

                    b.Property<string>("ResimYol");

                    b.HasKey("MarkaId");

                    b.ToTable("marka");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleAd");

                    b.HasKey("RoleId");

                    b.ToTable("role");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+SiparisDetay", b =>
                {
                    b.Property<int>("SiparisId");

                    b.Property<int>("UrunId");

                    b.Property<float>("BirimFiyat");

                    b.Property<float>("Indirim");

                    b.Property<int>("Miktar");

                    b.Property<int>("OdemeSecenekId");

                    b.Property<DateTime>("TeslimTarihi");

                    b.HasKey("SiparisId", "UrunId");

                    b.HasIndex("UrunId");

                    b.ToTable("siparisdetay");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+SiparisMaster", b =>
                {
                    b.Property<int>("SiparisId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KargoId");

                    b.Property<bool>("SepetteMi");

                    b.Property<bool>("SiparisDurum");

                    b.Property<DateTime>("SiparisTarih");

                    b.Property<float>("ToplamFiyat");

                    b.Property<int?>("UyeId");

                    b.HasKey("SiparisId");

                    b.HasIndex("KargoId");

                    b.HasIndex("UyeId");

                    b.ToTable("siparismaster");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Stok", b =>
                {
                    b.Property<int>("StokId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Cikis");

                    b.Property<string>("DepoAdres");

                    b.Property<DateTime>("Giris");

                    b.Property<int>("Tip");

                    b.Property<string>("UrunAdet");

                    b.Property<int>("UrunId");

                    b.HasKey("StokId");

                    b.HasIndex("UrunId");

                    b.ToTable("stok");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Ulke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad");

                    b.HasKey("Id");

                    b.ToTable("ulke");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+UrunResim", b =>
                {
                    b.Property<int>("ResimId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ResimYol");

                    b.Property<int>("UrunId");

                    b.HasKey("ResimId");

                    b.HasIndex("UrunId");

                    b.ToTable("urunResim");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+UrunYorum", b =>
                {
                    b.Property<int>("YorumId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UrunId");

                    b.Property<int>("UyeId");

                    b.Property<string>("Yorum");

                    b.Property<bool>("YorumDurum");

                    b.Property<DateTime>("YorumTarih");

                    b.HasKey("YorumId");

                    b.HasIndex("UrunId");

                    b.HasIndex("UyeId");

                    b.ToTable("urunyorum");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Urunler", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AlisFiyati");

                    b.Property<int>("AltKategoriId");

                    b.Property<int>("Kampanyaid");

                    b.Property<int>("MarkaId");

                    b.Property<float>("SatisFiyati");

                    b.Property<string>("UrunAciklama");

                    b.Property<string>("UrunAdi");

                    b.Property<bool>("UrunDurum");

                    b.Property<string>("UrunKodu");

                    b.Property<DateTime>("UrunTarih");

                    b.HasKey("UrunId");

                    b.HasIndex("AltKategoriId");

                    b.HasIndex("MarkaId");

                    b.ToTable("urunler");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+UyeAdres", b =>
                {
                    b.Property<int>("AdresId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresTanim");

                    b.Property<string>("AdresTuru");

                    b.Property<int>("IlceId");

                    b.Property<string>("PostaKodu");

                    b.Property<int>("UyeId");

                    b.HasKey("AdresId");

                    b.HasIndex("IlceId");

                    b.HasIndex("UyeId");

                    b.ToTable("uyeAdress");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Uyeler", b =>
                {
                    b.Property<int>("UyeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad");

                    b.Property<DateTime>("KayitTarihi");

                    b.Property<string>("Mail");

                    b.Property<int>("RoleId");

                    b.Property<string>("Sifre");

                    b.Property<string>("Soyad");

                    b.Property<string>("TcNo");

                    b.Property<string>("Tel");

                    b.Property<bool>("UyeDurum");

                    b.HasKey("UyeId");

                    b.HasIndex("RoleId");

                    b.ToTable("uyeler");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+AltKategori", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+Kategoriler", "Kategoriler")
                        .WithMany("AltKategoris")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Il", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+Ulke", "Ulke")
                        .WithMany("Ils")
                        .HasForeignKey("Ulkeid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Ilce", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+Il", "Il")
                        .WithMany("Ilces")
                        .HasForeignKey("Ilid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Kargo", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+UyeAdres", "UyeAdres")
                        .WithMany("Kargos")
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+SiparisDetay", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+SiparisMaster", "Siparisler")
                        .WithMany("SiparisDetays")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("proje.Data.DatabaseContext+Urunler", "Urunler")
                        .WithMany("SiparisDetays")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+SiparisMaster", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+Kargo", "Kargo")
                        .WithMany("SiparisMasters")
                        .HasForeignKey("KargoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("proje.Data.DatabaseContext+Uyeler", "Uyeler")
                        .WithMany()
                        .HasForeignKey("UyeId");
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Stok", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+Urunler", "Urunler")
                        .WithMany("Stoks")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+UrunResim", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+Urunler", "Urunler")
                        .WithMany("UrunResims")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+UrunYorum", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+Urunler", "Urunler")
                        .WithMany("UrunYorums")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("proje.Data.DatabaseContext+Uyeler", "Uyeler")
                        .WithMany("UrunYorums")
                        .HasForeignKey("UyeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Urunler", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+AltKategori", "AltKategori")
                        .WithMany("Urunler")
                        .HasForeignKey("AltKategoriId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("proje.Data.DatabaseContext+Marka", "Marka")
                        .WithMany("Urunler")
                        .HasForeignKey("MarkaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+UyeAdres", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+Ilce", "Ilce")
                        .WithMany("UyeAdress")
                        .HasForeignKey("IlceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("proje.Data.DatabaseContext+Uyeler", "Uyeler")
                        .WithMany("UyeAdress")
                        .HasForeignKey("UyeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("proje.Data.DatabaseContext+Uyeler", b =>
                {
                    b.HasOne("proje.Data.DatabaseContext+Role", "Role")
                        .WithMany("Uyelers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
